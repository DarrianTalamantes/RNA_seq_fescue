# Make plots for all selected genotypes
plots <- lapply(genotypes, plot_one)
# Combine 2x2 grid
p_all <- p_all +
plot_annotation(
title = harvest_time,
theme = theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
)
)
return(p_all)
}
PCA_HarvestTime(vsd, "October_2017")
PCA_HarvestTime(vsd, "October_2016")
PCA_HarvestTime(vsd, "October_2017")
PCA_HarvestTime(vsd, "October_2016")
vsd_june <- vsd[, vsd$HarvestTime == "June_2016"]
vsd_june_CTE31 <- vsd_june[, vsd_june$Genotype == "CTE31"]
vsd_june_CTE45 <- vsd_june[, vsd_june$Genotype == "CTE45"]
vsd_june_CTE25 <- vsd_june[, vsd_june$Genotype == "CTE25"]
vsd_june_CTE46 <- vsd_june[, vsd_june$Genotype == "CTE46"]
junep1 <- plotPCA(vsd_june_CTE25, intgroup = "Treatment")
junep1_1 <- junep1 + labs(color = "Treatment") + theme_bw() + ggtitle("CTE25") +   theme(plot.title = element_text(hjust = 0.5))
junep2 <- plotPCA(vsd_june_CTE31, intgroup = "Treatment")
junep2_1 <- junep2 + labs(color = "Treatment") + theme_bw() + ggtitle("CTE31") +   xlim(-60, 60) + theme(plot.title = element_text(hjust = 0.5))
junep3 <- plotPCA(vsd_june_CTE45, intgroup = "Treatment")
junep3_1 <- junep3 + labs(color = "Treatment") + theme_bw() + ggtitle("CTE45") +   theme(plot.title = element_text(hjust = 0.5))
june4 <- plotPCA(vsd_june_CTE46, intgroup = "Treatment")
junep4_1 <- june4 + labs(color = "Treatment") + theme_bw() + ggtitle("CTE46") +   theme(plot.title = element_text(hjust = 0.5))
junep1_1
junep2_1
junep3_1
junep4_1
# Combine 2x2 grid with shared legend
p_all <- (junep1_1 | junep2_1) / (junep3_1 | junep4_1)
p_all
vsd_june <- vsd[, vsd$HarvestTime == "June_2017"]
vsd_june_CTE31 <- vsd_june[, vsd_june$Genotype == "CTE31"]
vsd_june_CTE45 <- vsd_june[, vsd_june$Genotype == "CTE45"]
vsd_june_CTE25 <- vsd_june[, vsd_june$Genotype == "CTE25"]
vsd_june_CTE46 <- vsd_june[, vsd_june$Genotype == "CTE46"]
junep1 <- plotPCA(vsd_june_CTE25, intgroup = "Treatment")
junep1_1 <- junep1 + labs(color = "Treatment") + theme_bw() + ggtitle("CTE25") +   theme(plot.title = element_text(hjust = 0.5))
junep2 <- plotPCA(vsd_june_CTE31, intgroup = "Treatment")
junep2_1 <- junep2 + labs(color = "Treatment") + theme_bw() + ggtitle("CTE31") +   xlim(-60, 60) + theme(plot.title = element_text(hjust = 0.5))
junep3 <- plotPCA(vsd_june_CTE45, intgroup = "Treatment")
junep3_1 <- junep3 + labs(color = "Treatment") + theme_bw() + ggtitle("CTE45") +   theme(plot.title = element_text(hjust = 0.5))
june4 <- plotPCA(vsd_june_CTE46, intgroup = "Treatment")
junep4_1 <- june4 + labs(color = "Treatment") + theme_bw() + ggtitle("CTE46") +   theme(plot.title = element_text(hjust = 0.5))
junep1_1
junep2_1
junep3_1
junep4_1
# Combine 2x2 grid with shared legend
p_all <- (junep1_1 | junep2_1) / (junep3_1 | junep4_1)
p_all
PCA_HarvestTime(vsd, "June_2017")
PCA_HarvestTime(vsd, "June_2016")
PCA_HarvestTime <- function(vsd, harvest_time){
# Subset by harvest time
meta <- colData(vsd)                       # get metadata
samples_to_keep <- rownames(meta)[meta$HarvestTime == harvest_time]
vsd_sub <- vsd[, samples_to_keep]          # subset by column names
meta_sub <- colData(vsd_sub)
# List of genotypes you want
genotypes <- c("CTE25", "CTE31", "CTE45", "CTE46")
# Function to plot PCA for a single genotype
plot_one <- function(geno) {
vsd_g <- vsd_sub[, meta_sub$Genotype == geno]  # FIXED LINE
p <- plotPCA(vsd_g, intgroup = "Treatment") +
labs(color = "Treatment") +
theme_bw() +
ggtitle(geno) +
theme(plot.title = element_text(hjust = 0.5))
return(p)
}
# Make plots for all selected genotypes
plots <- lapply(genotypes, plot_one)
# Combine 2x2 grid
p_all <- p_all +
plot_annotation(
title = harvest_time,
theme = theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
)
)
return(p_all)
}
PCA_HarvestTime(vsd, "June_2017")
PCA_HarvestTime(vsd, "June_2016")
PCA_HarvestTime <- function(vsd, harvest_time){
# Subset by harvest time
meta <- colData(vsd)                       # get metadata
samples_to_keep <- rownames(meta)[meta$HarvestTime == harvest_time]
vsd_sub <- vsd[, samples_to_keep]          # subset by column names
meta_sub <- colData(vsd_sub)
# List of genotypes you want
genotypes <- c("CTE25", "CTE31", "CTE45", "CTE46")
# Function to plot PCA for a single genotype
plot_one <- function(geno) {
vsd_g <- vsd_sub[, meta_sub$Genotype == geno]  # FIXED LINE
p <- plotPCA(vsd_g, intgroup = "Treatment") +
labs(color = "Treatment") +
theme_bw() +
ggtitle(geno) +
theme(plot.title = element_text(hjust = 0.5))
return(p)
}
# Make plots for all selected genotypes
plots <- lapply(genotypes, plot_one)
# Combine 2x2 grid
p_all <- p_all +
plot_annotation(
title = harvest_time,
theme = theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
)
)
return(p_all)
}
PCA_HarvestTime(vsd, "June_2017")
PCA_HarvestTime(vsd, "June_2016")
rownames(meta)[meta$HarvestTime == harvest_time]
harvest_time = "June_2017"
vsd_sub[, meta_sub$Genotype == geno
]
rownames(meta)[meta$HarvestTime == harvest_time]
vsd[, samples_to_keep]
samples_to_keep <- rownames(meta)[meta$HarvestTime == harvest_time]
vsd_sub <- vsd[, samples_to_keep]          # subset by column names
meta_sub <- colData(vsd_sub)
meta_sub
harvest_time = "June_2016"
meta <- colData(vsd)                       # get metadata
samples_to_keep <- rownames(meta)[meta$HarvestTime == harvest_time]
vsd_sub <- vsd[, samples_to_keep]          # subset by column names
meta_sub <- colData(vsd_sub)
meta_sub
PCA_HarvestTime <- function(vsd, harvest_time){
# Subset by harvest time
meta <- colData(vsd)                       # get metadata
samples_to_keep <- rownames(meta)[meta$HarvestTime == harvest_time]
vsd_sub <- vsd[, samples_to_keep]          # subset by column names
meta_sub <- colData(vsd_sub)
# List of genotypes you want
genotypes <- c("CTE25", "CTE31", "CTE45", "CTE46")
# Function to plot PCA for a single genotype
plot_one <- function(geno) {
vsd_g <- vsd_sub[, meta_sub$Genotype == geno]  # FIXED LINE
p <- plotPCA(vsd_g, intgroup = "Treatment") +
labs(color = "Treatment") +
theme_bw() +
ggtitle(geno) +
theme(plot.title = element_text(hjust = 0.5))
return(p)
}
# Make plots for all selected genotypes
plots <- lapply(genotypes, plot_one)
# Combine 2x2 grid
p_all <- p_all +
plot_annotation(
title = harvest_time,
theme = theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
)
)
return(p_all)
}
PCA_HarvestTime(vsd, "June_2017")
PCA_HarvestTime(vsd, "June_2016")
PCA_HarvestTime <- function(vsd, harvest_time){
# Subset by harvest time
meta <- colData(vsd)                       # get metadata
samples_to_keep <- rownames(meta)[meta$HarvestTime == harvest_time]
vsd_sub <- vsd[, samples_to_keep]          # subset by column names
meta_sub <- colData(vsd_sub)
# List of genotypes you want
genotypes <- c("CTE25", "CTE31", "CTE45", "CTE46")
# Function to plot PCA for a single genotype
plot_one <- function(geno) {
vsd_g <- vsd_sub[, meta_sub$Genotype == geno]  # FIXED LINE
p <- plotPCA(vsd_g, intgroup = "Treatment") +
labs(color = "Treatment") +
theme_bw() +
ggtitle(geno) +
theme(plot.title = element_text(hjust = 0.5))
return(p)
}
# Make plots for all selected genotypes
plots <- lapply(genotypes, plot_one)
p_all <- (plots[[1]] | plots[[2]]) / (plots[[3]] | plots[[4]])
# Combine 2x2 grid
p_all <- p_all +
plot_annotation(
title = harvest_time,
theme = theme(
plot.title = element_text(hjust = 0.5, size = 16, face = "bold")
)
)
return(p_all)
}
PCA_HarvestTime(vsd, "June_2017")
PCA_HarvestTime(vsd, "June_2016")
for (ht in unique(vsd$HarvestTime)) {
message("Processing: ", ht)
plot <- PCA_HarvestTime(vsd, ht)
ggsave(plot,file = paste0("PCA_", gsub("[^A-Za-z0-9]", "_", ht), ".png"), width = 10, height = 10, dpi = 300 )
}
for (ht in unique(vsd$HarvestTime)) {
message("Processing: ", ht)
plot <- PCA_HarvestTime(vsd, ht)
ggsave(plot,file = paste0("2aa_PCA_", gsub("[^A-Za-z0-9]", "_", ht), ".png"), width = 10, height = 10, dpi = 300 )
}
treatment_effect_by_harvest <- lapply(unique(vsd$HarvestTime), function(ht) {
samples_to_keep <- rownames(colData(vsd))[colData(vsd)$HarvestTime == ht]
vsd_sub <- vsd[, samples_to_keep]
pca_data <- plotPCA(vsd_sub, intgroup = "Treatment", returnData = TRUE)
anova_PC1 <- aov(PC1 ~ Treatment, data = pca_data)
ss <- summary(anova_PC1)[[1]][, "Sum Sq"]
treatment_fraction <- ss["Treatment"] / sum(ss)
data.frame(HarvestTime = ht, Treatment_PC1_fraction = treatment_fraction)
})
treatment_effect_df <- bind_rows(treatment_effect_by_harvest)
treatment_effect_df
# Percentage of variance in PC1 explained by Treatment
anova_PC1 <- aov(PC1 ~ Treatment, data = pca_data)
pca_data <- plotPCA(vsd_sub, intgroup = "Treatment", returnData = TRUE)
head(pca_data)
# Percentage of variance in PC1 explained by Treatment
anova_PC1 <- aov(PC1 ~ Treatment, data = pca_data)
summary(anova_PC1)
ss <- summary(anova_PC1)[[1]][, "Sum Sq"]
treatment_var_fraction <- ss["Treatment"] / sum(ss)
treatment_var_fraction
pca_data
head(pca_data)
vsd_sub
pca_data <- plotPCA(vsd_sub, intgroup = "Treatment", returnData = TRUE)
head(pca_data)
# Percentage of variance in PC1 explained by Treatment
anova_PC1 <- aov(PC1 ~ Treatment, data = pca_data)
summary(anova_PC1)
ss <- summary(anova_PC1)[[1]][, "Sum Sq"]
treatment_var_fraction <- ss["Treatment"] / sum(ss)
treatment_var_fraction
ss
sum(ss)
ss["Treatment"]
summary(anova_PC1)
ss["Treatment"]
ss["Treatment"]
ss["Treatment"]
ss <- summary(anova_PC1)[[1]][, "Sum Sq"]
ss
treatment_var_fraction <- ss[1] / sum(ss)
treatment_var_fraction
pca_data <- plotPCA(vsd_sub, intgroup = "Treatment", returnData = TRUE)
head(pca_data)
# Percentage of variance in PC1 explained by Treatment
anova_PC1 <- aov(PC2 ~ Treatment, data = pca_data)
summary(anova_PC1)
ss <- summary(anova_PC1)[[1]][, "Sum Sq"]
treatment_var_fraction <- ss[1] / sum(ss)
treatment_var_fraction
plotPCA(vsd_sub, intgroup = "Treatment", returnData = TRUE)
# Subset by harvest time
meta <- colData(vsd)
samples_ht <- rownames(meta)[meta$HarvestTime == ht]
vsd_sub <- vsd[, samples_ht]
meta_sub <- colData(vsd_sub)
# Subset by genotype
samples_geno <- rownames(meta_sub)[meta_sub$Genotype == geno]
vsd_g <- vsd_sub[, samples_geno]
vsd_g
# Extract PCA coordinates
pca_data <- plotPCA(vsd_g, intgroup = "Treatment", returnData = TRUE)
###### Finding out Variance caused by treatment in Harvest time graphs  ########
ht <- "October_2017"
geno <- "CTE25"
# Subset by harvest time
meta <- colData(vsd)
samples_ht <- rownames(meta)[meta$HarvestTime == ht]
vsd_sub <- vsd[, samples_ht]
meta_sub <- colData(vsd_sub)
# Subset by genotype
samples_geno <- rownames(meta_sub)[meta_sub$Genotype == geno]
vsd_g <- vsd_sub[, samples_geno]
samples_geno
vsd_g
vsd_g <- vsd_sub[, samples_geno]
# Extract PCA coordinates
pca_data <- plotPCA(vsd_g, intgroup = "Treatment", returnData = TRUE)
# ANOVA for PC1
anova_PC1 <- aov(PC1 ~ Treatment, data = pca_data)
ss <- summary(anova_PC1)[[1]][, "Sum Sq"]
# Fraction of variance in PC1 explained by Treatment
treatment_var_fraction <- ss[1] / sum(ss)
treatment_var_fraction
ht <- "October_2017"
geno <- "CTE25"
# Subset by harvest time
meta <- colData(vsd)
samples_ht <- rownames(meta)[meta$HarvestTime == ht]
vsd_sub <- vsd[, samples_ht]
meta_sub <- colData(vsd_sub)
# Subset by genotype
samples_geno <- rownames(meta_sub)[meta_sub$Genotype == geno]
vsd_g <- vsd_sub[, samples_geno]
# Extract PCA coordinates
pca_data <- plotPCA(vsd_g, intgroup = "Treatment", returnData = TRUE)
# ANOVA for PC1
anova_PC1 <- aov(PC1 ~ Treatment, data = pca_data)
ss <- summary(anova_PC1)[[1]][, "Sum Sq"]
# Fraction of variance in PC1 explained by Treatment
treatment_var_fraction <- ss[1] / sum(ss)
treatment_var_fraction
ht <- "October_2017"
geno <- "CTE25"
# Subset by harvest time
meta <- colData(vsd)
samples_ht <- rownames(meta)[meta$HarvestTime == ht]
vsd_sub <- vsd[, samples_ht]
meta_sub <- colData(vsd_sub)
# Subset by genotype
samples_geno <- rownames(meta_sub)[meta_sub$Genotype == geno]
vsd_g <- vsd_sub[, samples_geno]
# Extract PCA coordinates
pca_data <- plotPCA(vsd_g, intgroup = "Treatment", returnData = TRUE)
# ANOVA for PC1
anova_PC1 <- aov(PC2 ~ Treatment, data = pca_data)
ss <- summary(anova_PC1)[[1]][, "Sum Sq"]
# Fraction of variance in PC1 explained by Treatment
treatment_var_fraction <- ss[1] / sum(ss)
treatment_var_fraction
###### Finding out Variance caused by treatment in Harvest time graphs  ########
ht <- "June_2016"
geno <- "CTE25"
# Subset by harvest time
meta <- colData(vsd)
samples_ht <- rownames(meta)[meta$HarvestTime == ht]
vsd_sub <- vsd[, samples_ht]
meta_sub <- colData(vsd_sub)
# Subset by genotype
samples_geno <- rownames(meta_sub)[meta_sub$Genotype == geno]
vsd_g <- vsd_sub[, samples_geno]
# Extract PCA coordinates
pca_data <- plotPCA(vsd_g, intgroup = "Treatment", returnData = TRUE)
# ANOVA for PC1
anova_PC1 <- aov(PC2 ~ Treatment, data = pca_data)
ss <- summary(anova_PC1)[[1]][, "Sum Sq"]
# Fraction of variance in PC1 explained by Treatment
treatment_var_fraction <- ss[1] / sum(ss)
treatment_var_fraction
# ANOVA for PC1
anova_PC1 <- aov(PC1 ~ Treatment, data = pca_data)
ss <- summary(anova_PC1)[[1]][, "Sum Sq"]
# Fraction of variance in PC1 explained by Treatment
treatment_var_fraction <- ss[1] / sum(ss)
treatment_var_fraction
anova_PC1
# Subset by harvest time
meta <- colData(vsd)
samples_ht <- rownames(meta)[meta$HarvestTime == ht]
vsd_sub <- vsd[, samples_ht]
meta_sub <- colData(vsd_sub)
# Subset by genotype
samples_geno <- rownames(meta_sub)[meta_sub$Genotype == geno]
vsd_g <- vsd_sub[, samples_geno]
# Extract PCA coordinates
pca_data <- plotPCA(vsd_g, intgroup = "Treatment", returnData = TRUE)
# ANOVA for PC1
anova_PC1 <- aov(PC1 ~ Treatment, data = pca_data)
ss <- summary(anova_PC1)[[1]][, "Sum Sq"]
# Fraction of variance in PC1 explained by Treatment
treatment_var_fraction <- ss[1] / sum(ss)
treatment_var_fraction
###### Finding out Variance caused by treatment in Harvest time graphs  ########
ht <- "June_2016"
geno <- "CTE46"
# Subset by harvest time
meta <- colData(vsd)
samples_ht <- rownames(meta)[meta$HarvestTime == ht]
vsd_sub <- vsd[, samples_ht]
meta_sub <- colData(vsd_sub)
# Subset by genotype
samples_geno <- rownames(meta_sub)[meta_sub$Genotype == geno]
vsd_g <- vsd_sub[, samples_geno]
# Extract PCA coordinates
pca_data <- plotPCA(vsd_g, intgroup = "Treatment", returnData = TRUE)
# ANOVA for PC1
anova_PC1 <- aov(PC1 ~ Treatment, data = pca_data)
ss <- summary(anova_PC1)[[1]][, "Sum Sq"]
# Fraction of variance in PC1 explained by Treatment
treatment_var_fraction <- ss[1] / sum(ss)
treatment_var_fraction
varaince_finder(June_2016, CTE46)
genotypes <- c("CTE25", "CTE31", "CTE45", "CTE46")
for (geno in genotypes) {
variance_finder("June_2016", geno)  # assuming your function takes (harvest_time, genotype)
}
varaince_finder <- function(ht, geno){
# Subset by harvest time
meta <- colData(vsd)
samples_ht <- rownames(meta)[meta$HarvestTime == ht]
vsd_sub <- vsd[, samples_ht]
meta_sub <- colData(vsd_sub)
# Subset by genotype
samples_geno <- rownames(meta_sub)[meta_sub$Genotype == geno]
vsd_g <- vsd_sub[, samples_geno]
# Extract PCA coordinates
pca_data <- plotPCA(vsd_g, intgroup = "Treatment", returnData = TRUE)
# ANOVA for PC1
anova_PC1 <- aov(PC1 ~ Treatment, data = pca_data)
ss <- summary(anova_PC1)[[1]][, "Sum Sq"]
# Fraction of variance in PC1 explained by Treatment
treatment_var_fraction <- ss[1] / sum(ss)
treatment_var_fraction
return(treatment_var_fraction)
}
genotypes <- c("CTE25", "CTE31", "CTE45", "CTE46")
for (geno in genotypes) {
variance_finder("June_2016", geno)  # assuming your function takes (harvest_time, genotype)
}
variance_finder <- function(ht, geno){
# Subset by harvest time
meta <- colData(vsd)
samples_ht <- rownames(meta)[meta$HarvestTime == ht]
vsd_sub <- vsd[, samples_ht]
meta_sub <- colData(vsd_sub)
# Subset by genotype
samples_geno <- rownames(meta_sub)[meta_sub$Genotype == geno]
vsd_g <- vsd_sub[, samples_geno]
# Extract PCA coordinates
pca_data <- plotPCA(vsd_g, intgroup = "Treatment", returnData = TRUE)
# ANOVA for PC1
anova_PC1 <- aov(PC1 ~ Treatment, data = pca_data)
ss <- summary(anova_PC1)[[1]][, "Sum Sq"]
# Fraction of variance in PC1 explained by Treatment
treatment_var_fraction <- ss[1] / sum(ss)
treatment_var_fraction
return(treatment_var_fraction)
}
genotypes <- c("CTE25", "CTE31", "CTE45", "CTE46")
for (geno in genotypes) {
variance_finder("June_2016", geno)  # assuming your function takes (harvest_time, genotype)
}
genotypes <- c("CTE25", "CTE31", "CTE45", "CTE46")
for (geno in genotypes) {
num <- variance_finder("June_2016", geno)
print(paste0(harvest_time, " ", geno, " PC1 percent is ", num))
}
unique(vsd$HarvestTime
unique(vsd$HarvestTime)
unique(vsd$HarvestTime)
c(unique(vsd$HarvestTime))
harvest_times <- unique(vsd$HarvestTime)
harvest_times
harvest_times
harvest_times[1]
harvest_times[2]
harvest_times[3]
for (harvest_time in harvest_times) {
for (geno in genotypes) {
num <- variance_finder("June_2016", geno)
print(paste0(harvest_time, " ", geno, " PC1 percent is ", num))
}
}
for (harvest_time in harvest_times) {
for (geno in genotypes) {
num <- variance_finder(harvest_time, geno)
print(paste0(harvest_time, " ", geno, " PC1 percent is ", num))
}
}
# Prep for using the function in a loop
genotypes <- c("CTE25", "CTE31", "CTE45", "CTE46")
harvest_times <- unique(vsd$HarvestTime)
results_df <- data.frame(
HarvestTime = character(),
Genotype = character(),
Treatment_PC1_fraction = numeric(),
stringsAsFactors = FALSE
)
for (harvest_time in harvest_times) {
for (geno in genotypes) {
num <- variance_finder(harvest_time, geno)
print(paste0(harvest_time, " ", geno, " PC1 percent is ", num))
# Append result to data frame
results_df <- results_df %>%
add_row(
HarvestTime = harvest_time,
Genotype = geno,
Treatment_PC1_fraction = num
)
}
}
results_df
results_df
write.csv(results_df, file = paste0(data_folder, "/2aa_PC1_variance_of_subsetted_data_geno_harvesttime.txt"))
write.csv(results_df, file = paste0(data_folder, "/2aa_PC1_variance_of_subsetted_data_geno_harvesttime.csv"))
mat_filtered
# Counts of DEGs in each sample
nonzero_counts <- colSums(mat != 0)
nonzero_counts
num_nonzero_genes <- sum(rowSums(mat_filtered != 0) > 0)
num_nonzero_genes
# Counts of DEGs in each sample
nonzero_counts <- colSums(mat_filtered != 0)
nonzero_counts
as.dataframe(nonzero_counts)
as.data.frame(nonzero_counts)
nonzero_counts <- as.data.frame(nonzero_counts)
View(nonzero_counts)
